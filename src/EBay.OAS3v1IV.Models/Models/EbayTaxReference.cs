/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.20.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = EBay.OAS3v1IV.Client.SwaggerDateConverter;
namespace EBay.OAS3v1IV.Models
{
    /// <summary>
    /// This type describes the VAT tax details. The eBay VAT tax type and the eBay VAT identifier number will be returned if a VAT tax is applicable for the order.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt;  As of January 31, 2022, &lt;b&gt;addressLine2&lt;/b&gt; no longer returns EU VAT tax information.&lt;/span&gt;
    /// </summary>
    [DataContract]
        public partial class EbayTaxReference :  IEquatable<EbayTaxReference>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EbayTaxReference" /> class.
        /// </summary>
        /// <param name="name">This field value is returned to indicate the VAT tax type, which will vary by country/region. This string value will be one of the following:&lt;ul&gt;&lt;li&gt;&lt;code&gt;ABN&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an Australia tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;DDG&lt;/code&gt;: if this string is returned, it indicates that tax has been collected and remitted for Digitally Delivered Goods (DDG)&lt;/li&gt;&lt;li&gt;&lt;code&gt;IOSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay EU or UK IOSS number&lt;/li&gt;&lt;li&gt;&lt;code&gt;IRD&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay New Zealand tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;SST&lt;/code&gt;: if this string is returned, the ID in the &lt;b&gt;value&lt;/b&gt; field is an eBay Malaysia taxNumber&lt;/li&gt;&lt;li&gt;&lt;code&gt;OSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an  eBay Germany VAT ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;VOEC&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay Norway tax ID&lt;/li&gt;&lt;/ul&gt;.</param>
        /// <param name="value">The value returned in this field is the VAT identifier number (VATIN), which will vary by country/region. This field will be returned if VAT tax is applicable for the order. The &lt;strong&gt;name&lt;/strong&gt; field indicates the VAT tax type, which will vary by country/region: &lt;ul&gt;&lt;li&gt;&lt;strong&gt;ABN&lt;/strong&gt;: &lt;em&gt;eBay AU tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IOSS&lt;/strong&gt;: &lt;em&gt;eBay EU IOSS number&lt;/em&gt; / &lt;em&gt;eBay UK IOSS number&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IRD&lt;/strong&gt;: &lt;em&gt;eBay NZ tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OSS&lt;/strong&gt;: &lt;em&gt;eBay DE VAT ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;SST&lt;/b&gt;: &lt;i&gt;eBay MY taxNumber&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;VOEC&lt;/strong&gt;: &lt;em&gt;eBay NO number&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;.</param>
        public EbayTaxReference(string name = default(string), string value = default(string))
        {
            this.Name = name;
            this.Value = value;
        }
        
        /// <summary>
        /// This field value is returned to indicate the VAT tax type, which will vary by country/region. This string value will be one of the following:&lt;ul&gt;&lt;li&gt;&lt;code&gt;ABN&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an Australia tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;DDG&lt;/code&gt;: if this string is returned, it indicates that tax has been collected and remitted for Digitally Delivered Goods (DDG)&lt;/li&gt;&lt;li&gt;&lt;code&gt;IOSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay EU or UK IOSS number&lt;/li&gt;&lt;li&gt;&lt;code&gt;IRD&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay New Zealand tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;SST&lt;/code&gt;: if this string is returned, the ID in the &lt;b&gt;value&lt;/b&gt; field is an eBay Malaysia taxNumber&lt;/li&gt;&lt;li&gt;&lt;code&gt;OSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an  eBay Germany VAT ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;VOEC&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay Norway tax ID&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <value>This field value is returned to indicate the VAT tax type, which will vary by country/region. This string value will be one of the following:&lt;ul&gt;&lt;li&gt;&lt;code&gt;ABN&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an Australia tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;DDG&lt;/code&gt;: if this string is returned, it indicates that tax has been collected and remitted for Digitally Delivered Goods (DDG)&lt;/li&gt;&lt;li&gt;&lt;code&gt;IOSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay EU or UK IOSS number&lt;/li&gt;&lt;li&gt;&lt;code&gt;IRD&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay New Zealand tax ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;SST&lt;/code&gt;: if this string is returned, the ID in the &lt;b&gt;value&lt;/b&gt; field is an eBay Malaysia taxNumber&lt;/li&gt;&lt;li&gt;&lt;code&gt;OSS&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an  eBay Germany VAT ID&lt;/li&gt;&lt;li&gt;&lt;code&gt;VOEC&lt;/code&gt;: if this string is returned, the ID in the &lt;strong&gt;value&lt;/strong&gt; field is an eBay Norway tax ID&lt;/li&gt;&lt;/ul&gt;</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// The value returned in this field is the VAT identifier number (VATIN), which will vary by country/region. This field will be returned if VAT tax is applicable for the order. The &lt;strong&gt;name&lt;/strong&gt; field indicates the VAT tax type, which will vary by country/region: &lt;ul&gt;&lt;li&gt;&lt;strong&gt;ABN&lt;/strong&gt;: &lt;em&gt;eBay AU tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IOSS&lt;/strong&gt;: &lt;em&gt;eBay EU IOSS number&lt;/em&gt; / &lt;em&gt;eBay UK IOSS number&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IRD&lt;/strong&gt;: &lt;em&gt;eBay NZ tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OSS&lt;/strong&gt;: &lt;em&gt;eBay DE VAT ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;SST&lt;/b&gt;: &lt;i&gt;eBay MY taxNumber&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;VOEC&lt;/strong&gt;: &lt;em&gt;eBay NO number&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <value>The value returned in this field is the VAT identifier number (VATIN), which will vary by country/region. This field will be returned if VAT tax is applicable for the order. The &lt;strong&gt;name&lt;/strong&gt; field indicates the VAT tax type, which will vary by country/region: &lt;ul&gt;&lt;li&gt;&lt;strong&gt;ABN&lt;/strong&gt;: &lt;em&gt;eBay AU tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IOSS&lt;/strong&gt;: &lt;em&gt;eBay EU IOSS number&lt;/em&gt; / &lt;em&gt;eBay UK IOSS number&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;IRD&lt;/strong&gt;: &lt;em&gt;eBay NZ tax ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;OSS&lt;/strong&gt;: &lt;em&gt;eBay DE VAT ID&lt;/em&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;SST&lt;/b&gt;: &lt;i&gt;eBay MY taxNumber&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;VOEC&lt;/strong&gt;: &lt;em&gt;eBay NO number&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;</value>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EbayTaxReference {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EbayTaxReference);
        }

        /// <summary>
        /// Returns true if EbayTaxReference instances are equal
        /// </summary>
        /// <param name="input">Instance of EbayTaxReference to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EbayTaxReference input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Value == input.Value ||
                    (this.Value != null &&
                    this.Value.Equals(input.Value))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Value != null)
                    hashCode = hashCode * 59 + this.Value.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
