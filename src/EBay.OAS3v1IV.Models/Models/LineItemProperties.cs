/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.20.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
//using SwaggerDateConverter = EBay.OAS3v1IV.Client.SwaggerDateConverter;
namespace eBay.OAS3v1IV.Models
{
    /// <summary>
    /// This type contains information about the eBay programs under which a line item was listed and sold.
    /// </summary>
    [DataContract]
        public partial class LineItemProperties :  IEquatable<LineItemProperties>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LineItemProperties" /> class.
        /// </summary>
        /// <param name="buyerProtection">A value of &lt;code&gt;true&lt;/code&gt; indicates that the line item is covered by eBay&#x27;s Buyer Protection program..</param>
        /// <param name="fromBestOffer">This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the purchase occurred by the buyer and seller mutually agreeing on a Best Offer amount. The Best Offer feature can be set up for any listing type, but if this feature is set up for an auction listing, it will no longer be available once a bid has been placed on the listing..</param>
        /// <param name="soldViaAdCampaign">This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the line item was sold as a result of a seller&#x27;s ad campaign..</param>
        public LineItemProperties(bool? buyerProtection = default(bool?), bool? fromBestOffer = default(bool?), bool? soldViaAdCampaign = default(bool?))
        {
            this.BuyerProtection = buyerProtection;
            this.FromBestOffer = fromBestOffer;
            this.SoldViaAdCampaign = soldViaAdCampaign;
        }
        
        /// <summary>
        /// A value of &lt;code&gt;true&lt;/code&gt; indicates that the line item is covered by eBay&#x27;s Buyer Protection program.
        /// </summary>
        /// <value>A value of &lt;code&gt;true&lt;/code&gt; indicates that the line item is covered by eBay&#x27;s Buyer Protection program.</value>
        [DataMember(Name="buyerProtection", EmitDefaultValue=false)]
        public bool? BuyerProtection { get; set; }

        /// <summary>
        /// This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the purchase occurred by the buyer and seller mutually agreeing on a Best Offer amount. The Best Offer feature can be set up for any listing type, but if this feature is set up for an auction listing, it will no longer be available once a bid has been placed on the listing.
        /// </summary>
        /// <value>This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the purchase occurred by the buyer and seller mutually agreeing on a Best Offer amount. The Best Offer feature can be set up for any listing type, but if this feature is set up for an auction listing, it will no longer be available once a bid has been placed on the listing.</value>
        [DataMember(Name="fromBestOffer", EmitDefaultValue=false)]
        public bool? FromBestOffer { get; set; }

        /// <summary>
        /// This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the line item was sold as a result of a seller&#x27;s ad campaign.
        /// </summary>
        /// <value>This field is only returned if &lt;code&gt;true&lt;/code&gt; and indicates that the line item was sold as a result of a seller&#x27;s ad campaign.</value>
        [DataMember(Name="soldViaAdCampaign", EmitDefaultValue=false)]
        public bool? SoldViaAdCampaign { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LineItemProperties {\n");
            sb.Append("  BuyerProtection: ").Append(BuyerProtection).Append("\n");
            sb.Append("  FromBestOffer: ").Append(FromBestOffer).Append("\n");
            sb.Append("  SoldViaAdCampaign: ").Append(SoldViaAdCampaign).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LineItemProperties);
        }

        /// <summary>
        /// Returns true if LineItemProperties instances are equal
        /// </summary>
        /// <param name="input">Instance of LineItemProperties to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LineItemProperties input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.BuyerProtection == input.BuyerProtection ||
                    (this.BuyerProtection != null &&
                    this.BuyerProtection.Equals(input.BuyerProtection))
                ) && 
                (
                    this.FromBestOffer == input.FromBestOffer ||
                    (this.FromBestOffer != null &&
                    this.FromBestOffer.Equals(input.FromBestOffer))
                ) && 
                (
                    this.SoldViaAdCampaign == input.SoldViaAdCampaign ||
                    (this.SoldViaAdCampaign != null &&
                    this.SoldViaAdCampaign.Equals(input.SoldViaAdCampaign))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.BuyerProtection != null)
                    hashCode = hashCode * 59 + this.BuyerProtection.GetHashCode();
                if (this.FromBestOffer != null)
                    hashCode = hashCode * 59 + this.FromBestOffer.GetHashCode();
                if (this.SoldViaAdCampaign != null)
                    hashCode = hashCode * 59 + this.SoldViaAdCampaign.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
