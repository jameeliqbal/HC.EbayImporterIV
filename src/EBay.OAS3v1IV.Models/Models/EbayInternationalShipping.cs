/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.20.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
//using SwaggerDateConverter = EBay.OAS3v1IV.Client.SwaggerDateConverter;
namespace eBay.OAS3v1IV.Models
{
    /// <summary>
    /// This type is used to provide details about an order line item being managed through eBay International Shipping.
    /// </summary>
    [DataContract]
        public partial class EbayInternationalShipping :  IEquatable<EbayInternationalShipping>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EbayInternationalShipping" /> class.
        /// </summary>
        /// <param name="returnsManagedBy">The value returned in this field indicates the party that is responsible for managing returns of the order line item.&lt;br&gt;&lt;br&gt;Valid value: &lt;code&gt;EBAY&lt;/code&gt;.</param>
        public EbayInternationalShipping(string returnsManagedBy = default(string))
        {
            this.ReturnsManagedBy = returnsManagedBy;
        }
        
        /// <summary>
        /// The value returned in this field indicates the party that is responsible for managing returns of the order line item.&lt;br&gt;&lt;br&gt;Valid value: &lt;code&gt;EBAY&lt;/code&gt;
        /// </summary>
        /// <value>The value returned in this field indicates the party that is responsible for managing returns of the order line item.&lt;br&gt;&lt;br&gt;Valid value: &lt;code&gt;EBAY&lt;/code&gt;</value>
        [DataMember(Name="returnsManagedBy", EmitDefaultValue=false)]
        public string ReturnsManagedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EbayInternationalShipping {\n");
            sb.Append("  ReturnsManagedBy: ").Append(ReturnsManagedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EbayInternationalShipping);
        }

        /// <summary>
        /// Returns true if EbayInternationalShipping instances are equal
        /// </summary>
        /// <param name="input">Instance of EbayInternationalShipping to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EbayInternationalShipping input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ReturnsManagedBy == input.ReturnsManagedBy ||
                    (this.ReturnsManagedBy != null &&
                    this.ReturnsManagedBy.Equals(input.ReturnsManagedBy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ReturnsManagedBy != null)
                    hashCode = hashCode * 59 + this.ReturnsManagedBy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
