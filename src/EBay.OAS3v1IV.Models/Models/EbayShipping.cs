/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.20.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
//using SwaggerDateConverter = EBay.OAS3v1IV.Client.SwaggerDateConverter;
namespace eBay.OAS3v1IV.Models
{
    /// <summary>
    /// This type contains information about the management of the shipping for the order.
    /// </summary>
    [DataContract]
        public partial class EbayShipping :  IEquatable<EbayShipping>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EbayShipping" /> class.
        /// </summary>
        /// <param name="shippingLabelProvidedBy">This field contains the shipping label provider. If &lt;code&gt;EBAY&lt;/code&gt;, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website..</param>
        public EbayShipping(string shippingLabelProvidedBy = default(string))
        {
            this.ShippingLabelProvidedBy = shippingLabelProvidedBy;
        }
        
        /// <summary>
        /// This field contains the shipping label provider. If &lt;code&gt;EBAY&lt;/code&gt;, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website.
        /// </summary>
        /// <value>This field contains the shipping label provider. If &lt;code&gt;EBAY&lt;/code&gt;, this order is managed by eBay shipping and a free shipping label by eBay is downloadable by the seller via the eBay website.</value>
        [DataMember(Name="shippingLabelProvidedBy", EmitDefaultValue=false)]
        public string ShippingLabelProvidedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EbayShipping {\n");
            sb.Append("  ShippingLabelProvidedBy: ").Append(ShippingLabelProvidedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EbayShipping);
        }

        /// <summary>
        /// Returns true if EbayShipping instances are equal
        /// </summary>
        /// <param name="input">Instance of EbayShipping to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EbayShipping input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ShippingLabelProvidedBy == input.ShippingLabelProvidedBy ||
                    (this.ShippingLabelProvidedBy != null &&
                    this.ShippingLabelProvidedBy.Equals(input.ShippingLabelProvidedBy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ShippingLabelProvidedBy != null)
                    hashCode = hashCode * 59 + this.ShippingLabelProvidedBy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
