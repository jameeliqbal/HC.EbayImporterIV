/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.20.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using EBay.OAS3v1IV.Client;
using EBay.OAS3v1IV.Apis;
using EBay.OAS3v1IV.Models;

namespace EBay.OAS3v1IV.Test
{
    /// <summary>
    ///  Class for testing OrderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrderApiTests
    {
        private OrderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrderApi
            //Assert.IsInstanceOfType(typeof(OrderApi), instance, "instance is a OrderApi");
        }

        /// <summary>
        /// Test GetOrder
        /// </summary>
        [Test]
        public void GetOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orderId = null;
            //string fieldGroups = null;
            //var response = instance.GetOrder(orderId, fieldGroups);
            //Assert.IsInstanceOf<Order> (response, "response is Order");
        }
        /// <summary>
        /// Test GetOrders
        /// </summary>
        [Test]
        public void GetOrdersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fieldGroups = null;
            //string filter = null;
            //string limit = null;
            //string offset = null;
            //string orderIds = null;
            //var response = instance.GetOrders(fieldGroups, filter, limit, offset, orderIds);
            //Assert.IsInstanceOf<OrderSearchPagedCollection> (response, "response is OrderSearchPagedCollection");
        }
        /// <summary>
        /// Test IssueRefund
        /// </summary>
        [Test]
        public void IssueRefundTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contentType = null;
            //string orderId = null;
            //IssueRefundRequest body = null;
            //var response = instance.IssueRefund(contentType, orderId, body);
            //Assert.IsInstanceOf<Refund> (response, "response is Refund");
        }
    }

}
